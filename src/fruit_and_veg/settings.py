"""
Django settings for src project.

Generated by 'django-admin startproject' using Django 5.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
from os.path import join
from dotenv import load_dotenv
from os import getenv
import logging

# Enables the `.env` file to be loaded
load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
TEMPLATES = join(BASE_DIR, "templates")

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = getenv("SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = getenv("DEBUG")


# set the path for the custom user model
AUTH_USER_MODEL = "authentication.User"


# Fetch the ALLOWED_HOSTS environment variable, defaulting to an empty string if not set
ALLOWED_HOSTS = [
    '127.0.0.1',
    'localhost',
    ".vercel.app",
    ".now.sh",
]



# Application definition

INSTALLED_APPS = [
    'jazzmin',     
    
    # my apps
    "home.apps.HomeConfig",
    "account.apps.AccountConfig",
    "authentication.apps.AuthenticationConfig",
    
    # third party django apps
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'fruit_and_veg.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [TEMPLATES],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'fruit_and_veg.wsgi.application'


JAZZMIN_SETTINGS = { 
        
        "site_brand": "EUOrganics",
        "welcome_sign": "Welcome to the EUOrganics",
        "copyright": "EUOrganics Ltd",
      
                
}

# Gmail 
EMAIL_BACKEND       = getenv('EMAIL_BACKEND')
EMAIL_HOST          = getenv('EMAIL_HOST')
EMAIL_PORT          = getenv('EMAIL_PORT')
EMAIL_USE_TLS       = getenv('EMAIL_USE_TLS')
EMAIL_HOST_USER     = getenv('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = getenv('EMAIL_HOST_PASSWORD')


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DB_NAME     = getenv("DB_NAME")
DB_USER     = getenv("DB_USER")
DB_PASSWORD = getenv("DB_PASSWORD")
DB_HOST     = getenv("DB_HOST")
DB_PORT     = getenv("DB_PORT")


DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': DB_NAME,
        'USER': DB_USER,
        'PASSWORD': DB_PASSWORD,
        'HOST': DB_HOST,
        'PORT': DB_PORT,
    }
}



# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
        'OPTION': {'min_length': 8},
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/


STATIC_URL = '/static/'

# This is required if you are running collectstatic
STATIC_ROOT = join(BASE_DIR, 'staticfiles_build', 'static')

STATICFILES_DIRS = [
    join(BASE_DIR,  'static'),
]


MEDIA_URL = '/media/'
MEDIA_ROOT = join(BASE_DIR, 'media')


# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'



